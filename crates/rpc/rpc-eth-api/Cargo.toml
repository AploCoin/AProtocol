[package]
name = "reth-rpc-eth-api"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Reth RPC `eth_` API implementation"

[lints]
workspace = true

[dependencies]
# reth
revm.workspace = true
revm-inspectors = { workspace = true, features = ["js-tracer"] }
revm-primitives.workspace = true
reth-errors.workspace = true
reth-evm.workspace = true
reth-metrics.workspace = true
reth-network-api.workspace = true
reth-primitives.workspace = true
reth-provider.workspace = true
reth-revm.workspace = true
reth-rpc-server-types.workspace = true
reth-rpc-types.workspace = true
reth-rpc-types-compat.workspace = true
reth-tasks = { workspace = true, features = ["rayon"] }
reth-trie.workspace = true
reth-transaction-pool.workspace = true

# ethereum
alloy-dyn-abi = { workspace = true, features = ["eip712"] }
alloy-consensus.workspace = true
alloy-network.workspace = true
alloy-rpc-types-eth.workspace = true
alloy-sol-types.workspace = true
secp256k1.workspace = true

# rpc
jsonrpsee.workspace = true
serde_json.workspace = true

# async
async-trait.workspace = true
futures.workspace = true
parking_lot.workspace = true
tokio.workspace = true
tokio-stream.workspace = true

# misc
auto_impl.workspace = true
derive_more.workspace = true
dyn-clone.workspace = true
metrics.workspace = true
rand.workspace = true
schnellru.workspace = true
serde.workspace = true
thiserror.workspace = true
tracing.workspace = true

[dev-dependencies]
reth-evm-ethereum.workspace = true
reth-testing-utils.workspace = true

[features]
client = ["jsonrpsee/client", "jsonrpsee/async-client"]
optimism = ["reth-primitives/optimism"]